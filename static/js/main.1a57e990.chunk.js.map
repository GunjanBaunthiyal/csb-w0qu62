{"version":3,"sources":["App.js","index.js"],"names":["emoticons","emo","Object","keys","App","useState","emoji","setEmoji","meaning","setMeaning","className","onChange","event","input","target","value","placeholder","map","onClick","rootElement","document","getElementById","createRoot","render"],"mappings":"mKAGMA,EAAY,CAChB,SAAK,QACL,eAAM,iCACN,eAAM,yBACN,eAAM,gBACN,eAAM,WACN,eAAM,MACN,eAAM,OACN,eAAM,WACN,eAAM,SACN,eAAM,QACN,eAAM,aACN,eAAM,aACN,eAAM,SACN,eAAM,UACN,qBAAO,oBACP,eAAM,gBACN,eAAM,UACN,eAAM,qBACN,eAAM,YACN,eAAM,OACN,qBAAO,MACP,qBAAO,WACP,qBAAO,UACP,qBAAO,cACP,eAAM,SACN,eAAM,SACN,eAAM,aACN,eAAM,WAGFC,EAAMC,OAAOC,KAAKH,GAET,SAASI,IACtB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAC5B,+CADF,mBAAOG,EAAP,KAAgBC,EAAhB,KAkBA,OACE,mCACE,sBAAKC,UAAU,MAAf,UACE,4CACA,8EACA,kNAKA,oDACA,qIAIA,uBACEC,SA9BR,SAAuBC,GACrB,IAAMC,EAAQD,EAAME,OAAOC,MAC3BR,EAASM,GAEPJ,EADEI,KAASb,EACAA,EAAUa,GAEV,qDAEd,EAuBOH,UAAU,WACVM,YAAY,sBAEd,6BAAKV,IACL,6BAAKE,IACJP,EAAIgB,KAAI,SAAUX,GACjB,OACE,uBAAMY,QAAS,WA3BvBT,EAAWT,EA2BkCM,GAAtB,EAAf,UACG,IACAA,IAF+CA,EAKrD,QAIR,CCpFD,IAAMa,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAACnB,EAAD,M","file":"static/js/main.1a57e990.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\nconst emoticons = {\n  \"❤\": \"Heart\",\n  \"😊\": \"Smiling Face with Smiling Eyes\",\n  \"😂\": \"Face with Tears of joy\",\n  \"😭\": \"Crying Loudly\",\n  \"😥\": \"Sad face\",\n  \"🪓\": \"Axe\",\n  \"🪁\": \"Kite\",\n  \"🧿\": \"Evil Eye\",\n  \"🧺\": \"Basket\",\n  \"🧹\": \"Broom\",\n  \"🧸\": \"Teddy Bear\",\n  \"🧷\": \"Safety Pin\",\n  \"🧲\": \"Magnet\",\n  \"🧰\": \"Toolbox\",\n  \"🛠️\": \"Hammer and Wrench\",\n  \"🛒\": \"Shopping Cart\",\n  \"🛁\": \"Bathtub\",\n  \"🛀\": \"Person Taking Bath\",\n  \"🚬\": \"Cigarette\",\n  \"🚪\": \"Door\",\n  \"🗝️\": \"Key\",\n  \"🗓️\": \"Calendar\",\n  \"🗒️\": \"Notepad\",\n  \"🖼️\": \"Photo Frame\",\n  \"🔨\": \"Hammer\",\n  \"🔧\": \"Wrench\",\n  \"🔦\": \"Flashlight\",\n  \"🔋\": \"Battery\"\n};\n\nconst emo = Object.keys(emoticons);\n\nexport default function App() {\n  const [emoji, setEmoji] = useState(\"\");\n  const [meaning, setMeaning] = useState(\n    \"Click on the emoji to find out it's meaning\"\n  );\n\n  function changeHandler(event) {\n    const input = event.target.value;\n    setEmoji(input);\n    if (input in emoticons) {\n      setMeaning(emoticons[input]);\n    } else {\n      setMeaning(\"Oops!! We don't recognise this emoji 😢 \");\n    }\n  }\n\n  function emoClickHandler(input) {\n    setMeaning(emoticons[input]);\n  }\n\n  return (\n    <>\n      <div className=\"App\">\n        <h1>Emojipedia</h1>\n        <h3>~~Communicate without embarassing yourself~~</h3>\n        <p>\n          It's hard to believe but there was a time before emojis when humans\n          were forced to communicate through words alone.Communications were\n          fraught and confusing. It was a dark time.\n        </p>\n        <h4>BUT NOT ANYMORE!!!</h4>\n        <p>\n          Here is a emoji dictionary which can help you find the actual meaning\n          of the emojis you want to use.\n        </p>\n        <input\n          onChange={changeHandler}\n          className=\"inputbox\"\n          placeholder=\"Search your emoji\"\n        />\n        <h2>{emoji}</h2>\n        <h3>{meaning}</h3>\n        {emo.map(function (emoji) {\n          return (\n            <span onClick={() => emoClickHandler(emoji)} key={emoji}>\n              {\" \"}\n              {emoji}\n            </span>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}